#!/usr/bin/expect
## Expect Script for Testing NuttX on StarPro64, over SSH to SBC
puts "Now running https://github.com/lupyuen/nuttx-release/blob/main/starpro64.exp"

## For every 1 character sent, wait 1 millisecond
set send_slow {1 0.001}

## Wait at most 60 seconds
set timeout 60

## Connect to SBC over SSH
spawn ssh $::env(STARPRO64_SERVER)

## Wake up SBC. Set TERM for `screen`.
send -s "\r"
send -s "export TERM=xterm-256color\r"

## Connect to SBC over USB Serial Port
expect "$"
send -s "screen -x\r"

## Wait a while
sleep 5

## Terminate the session: Ctrl-A k y
send -s "\x01ky"
send -s "\r"
sleep 5

## Connect to USB Serial Terminal
expect "$"
send -s "screen /dev/ttyUSB1 115200\r"

## Power Off StarPro64
puts "Power Off StarPro64..."
system "./starpro64-power.sh off"
sleep 5

## Power On StarPro64
puts "Power On StarPro64..."
system "./starpro64-power.sh on"

## Wait for the prompt and enter `uname -a`
expect {
  "nsh> " {}

  ## If timeout, exit with an error
  timeout { 
    ## Terminate the session: Ctrl-A k y
    send -s "\x01ky"
    send -s "exit\r"
    system "./starpro64-power.sh off"
    puts "\n===== Error: Test Failed\n"
    exit 1 
  }
}
send -s "uname -a\r"

## Wait at most 300 seconds for other commands
set timeout 300

## Wait for the prompt and enter `free`
expect "nsh> "
send -s "free\r"

## Wait for the prompt and enter `ps`
expect "nsh> "
send -s "ps\r"

## Wait for the prompt and enter `ls -l /dev`
expect "nsh> "
send -s "ls -l /dev\r"

## Wait for the prompt and enter `hello`
expect "nsh> "
send -s "hello\r"

## Wait for the prompt and enter `getprime`
expect "nsh> "
send -s "getprime\r"

## Wait for the prompt and enter `hello`
expect "nsh> "
send -s "hello\r"

## Wait for the prompt and enter `getprime`
expect "nsh> "
send -s "getprime\r"

## Wait for the prompt and enter `time "sleep 10"`
expect "nsh> "
system "date"
send -s "time \"sleep 10\"\r"

## Wait for the prompt and print the current time
expect "nsh> "
system "date"
send -s "\r"

## Wait for the prompt and enter `ostest`
expect "nsh> "
send -s "ostest\r"

## Check the response...
expect {
  ## If we see this message, exit normally
  "ostest_main: Exiting with status 0" { 
    ## Terminate the session: Ctrl-A k y
    send -s "\x01ky"
    send -s "exit\r"
    system "./starpro64-power.sh off"
    puts "\n===== Test OK\n"
    exit 0 
  }

  ## If timeout, exit with an error
  timeout { 
    ## Terminate the session: Ctrl-A k y
    send -s "\x01ky"
    send -s "exit\r"
    system "./starpro64-power.sh off"
    puts "\n===== Error: Test Failed\n"
    exit 1 
  }
}
